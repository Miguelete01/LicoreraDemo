// <auto-generated />
using System;
using LicoreraDemo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LicoreraDemo.Migrations
{
    [DbContext(typeof(FacturacionContext))]
    [Migration("20201101050115_InitialValuesTable")]
    partial class InitialValuesTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LicoreraDemo.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NoIdentificacion")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellidos = "Perez",
                            Direccion = "El Tanque Rojo",
                            NoIdentificacion = "0010101010009J",
                            Nombre = "Pepe",
                            Telefono = "89889988"
                        },
                        new
                        {
                            Id = 2,
                            Apellidos = "Leon",
                            Direccion = "Tokyi",
                            NoIdentificacion = "2210101010009J",
                            Nombre = "Mike",
                            Telefono = "88776688"
                        },
                        new
                        {
                            Id = 3,
                            Apellidos = "Musk",
                            Direccion = "New York",
                            NoIdentificacion = "0010112010009J",
                            Nombre = "Elon",
                            Telefono = "87898786"
                        });
                });

            modelBuilder.Entity("LicoreraDemo.Models.DetalleFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("TasaCambioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacturaId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TasaCambioId");

                    b.ToTable("DetalleFactura");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 1,
                            FacturaId = 1,
                            ProductoId = 1,
                            TasaCambioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 1,
                            FacturaId = 1,
                            ProductoId = 3,
                            TasaCambioId = 1
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 2,
                            FacturaId = 1,
                            ProductoId = 1,
                            TasaCambioId = 1
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 2,
                            FacturaId = 2,
                            ProductoId = 4,
                            TasaCambioId = 1
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 2,
                            FacturaId = 2,
                            ProductoId = 2,
                            TasaCambioId = 1
                        },
                        new
                        {
                            Id = 6,
                            Cantidad = 1,
                            FacturaId = 2,
                            ProductoId = 3,
                            TasaCambioId = 1
                        });
                });

            modelBuilder.Entity("LicoreraDemo.Models.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoFactura")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Factura");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            Fecha = new DateTime(2020, 11, 1, 5, 1, 14, 684, DateTimeKind.Utc).AddTicks(4935),
                            NoFactura = "F0001"
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            Fecha = new DateTime(2020, 11, 1, 5, 1, 14, 684, DateTimeKind.Utc).AddTicks(5982),
                            NoFactura = "F0002"
                        });
                });

            modelBuilder.Entity("LicoreraDemo.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("PrecioUS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreciosNio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Producto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = false,
                            Descripcion = "Dell inalambrico",
                            Nombre = "Mouse",
                            PrecioUS = 10m,
                            PreciosNio = 210m,
                            Stock = 90
                        },
                        new
                        {
                            Id = 2,
                            Activo = false,
                            Descripcion = "Dell Mecanico",
                            Nombre = "Teclado",
                            PrecioUS = 25m,
                            PreciosNio = 800m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            Activo = false,
                            Descripcion = "Cannon Semi Profecional",
                            Nombre = "Camara",
                            PrecioUS = 100m,
                            PreciosNio = 3210m,
                            Stock = 14
                        },
                        new
                        {
                            Id = 4,
                            Activo = false,
                            Descripcion = "Ortopedica",
                            Nombre = "Cama",
                            PrecioUS = 230m,
                            PreciosNio = 8110m,
                            Stock = 80
                        },
                        new
                        {
                            Id = 5,
                            Activo = false,
                            Descripcion = "Madera de cedro macho",
                            Nombre = "Mesa",
                            PrecioUS = 130m,
                            PreciosNio = 4510m,
                            Stock = 50
                        });
                });

            modelBuilder.Entity("LicoreraDemo.Models.TasaCambio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Equivalencia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TasaCambio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Equivalencia = 35m,
                            Fecha = new DateTime(2020, 11, 1, 5, 1, 14, 683, DateTimeKind.Utc).AddTicks(9947)
                        });
                });

            modelBuilder.Entity("LicoreraDemo.Models.DetalleFactura", b =>
                {
                    b.HasOne("LicoreraDemo.Models.Factura", "Factura")
                        .WithMany("DetalleFactura")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicoreraDemo.Models.Producto", "Producto")
                        .WithMany("DetalleFactura")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicoreraDemo.Models.TasaCambio", "TasaCambio")
                        .WithMany("DetalleFactura")
                        .HasForeignKey("TasaCambioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LicoreraDemo.Models.Factura", b =>
                {
                    b.HasOne("LicoreraDemo.Models.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
